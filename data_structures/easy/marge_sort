List<int> margeSort(List<int> list) {
  if (list.length < 2) {
    return list;
  } else if (list.length == 2) {
    if (list[0] > list[1]) {
      return [list[1], list[0]];
    } else {
      return list;
    }
  }
  int midle = (list.length / 2).ceil();
  if (list.length > 2) {
    return marge(margeSort(list.sublist(0, midle)),
        margeSort(list.sublist(midle, list.length)));
  }
  return list;
}

List<int> marge(List<int> l1, List<int> l2) {
  List<int> rez = [];
  while (l1.isNotEmpty && l2.isNotEmpty) {
    if (l1[0] < l2[0]) {
      rez.add(l1[0]);
      l1.remove(l1[0]);
    } else {
      rez.add(l2[0]);
      l2.remove(l2[0]);
    }
  }
  if (l2.isNotEmpty) {
    rez.addAll(l2);
  } else if (l1.isNotEmpty) {
    rez.addAll(l1);
  }

  return rez;
}
